{"version":3,"sources":["components/Text/TextField/index.js","assets/images/svg/eye-open.svg","assets/images/svg/eye-close.svg","components/Text/TextInput/index.js","assets/images/profile-img.png","assets/images/logo.svg","modules/signin/pages/Login.js"],"names":["Text","TextInput","name","type","placeholder","label","labelClassName","labelStyle","color","value","selectOption","emptyValue","handleChange","handleDateChange","handleDateTimeChange","startDate","endDate","minDate","search","disabled","className","isRequired","props","useState","showPassword","setShowPassword","style","Input","id","onChange","InputGroup","date","dateFormat","selected","moment","toDate","placeholderText","popperPlacement","showTimeSelect","styles","menu","provided","zIndex","isSearchable","options","find","e","getOptionLabel","option","getOptionValue","theme","borderRadius","borderWidth","colors","primary25","primary50","primary","position","src","iconEyeOpen","iconEyeClose","right","top","onClick","paddingRight","mapDispatchToProps","Login","payload","history","loginUser","withRouter","connect","state","isLoggedIn","auth","Auth","valid","setValid","username","password","inputs","setInputs","inputRefs","useRef","handleOnEnter","keyCode","current","focus","preventDefault","onSubmit","target","useEffect","Fragment","to","Container","Row","Col","md","lg","xl","Card","xs","profile","alt","CardBody","logo","height","Form","required","autoFocus","onKeyUp","innerRef","el","event","values","console","log","request","Date","getFullYear"],"mappings":"ySAgFeA,I,8DChFA,MAA0B,qCCA1B,MAA0B,sCCsJ1BC,MA9If,YAqBI,IApBFC,EAoBC,EApBDA,KAoBC,IAnBDC,YAmBC,MAnBM,OAmBN,EAlBDC,EAkBC,EAlBDA,YACAC,EAiBC,EAjBDA,MAiBC,IAhBDC,sBAgBC,MAhBgB,6CAgBhB,MAfDC,kBAeC,MAfY,CAAEC,MAAO,WAerB,EAdDC,EAcC,EAdDA,MAEAC,GAYC,EAbDC,WAaC,EAZDD,cACAE,EAWC,EAXDA,aACAC,EAUC,EAVDA,iBACAC,EASC,EATDA,qBACAC,EAQC,EARDA,UACAC,EAOC,EAPDA,QACAC,EAMC,EANDA,QACAC,EAKC,EALDA,OAEAC,GAGC,EAJDC,UAIC,EAHDD,UACAE,EAEC,EAFDA,WACGC,EACF,+PACuCC,oBAAS,GADhD,mBACMC,EADN,KACoBC,EADpB,KAED,OACE,qCACGpB,GACC,wBAAOe,UAAWd,EAAlB,UACGD,EADH,IACWgB,GAAc,sBAAMK,MAAOnB,EAAb,mBAGjB,SAATJ,GACC,cAACwB,EAAA,EAAD,aACExB,KAAMA,EACND,KAAMA,EACN0B,GAAI1B,EACJE,YAAaA,EACbyB,SAAUjB,EACVH,MAAOA,EACPU,SAAUA,GACNG,IAGE,SAATnB,GACC,cAAC2B,EAAA,EAAD,UACE,cAAC,IAAD,aACEV,UAAU,eACVS,SAAU,SAACE,GAAD,OAAUlB,EAAiBkB,IACrCC,WAAW,aACXC,SAAUxB,EAAQyB,IAAOzB,GAAO0B,SAAW,KAC3CC,gBAAiBhC,EACjBiC,gBAAgB,UAChBtB,UAAWA,EACXC,QAASA,EACTC,QAASA,EAAUF,EAAY,MAC3BO,MAIA,aAATnB,GACC,cAAC2B,EAAA,EAAD,UACE,cAAC,IAAD,aACEV,UAAU,eACVS,SAAU,SAACE,GAAD,OAAUjB,EAAqBiB,IACzCC,WAAW,mBACXC,SAAUxB,EAAQyB,IAAOzB,GAAO0B,SAAW,KAC3CG,gBAAc,EACdD,gBAAgB,UAChBD,gBAAiBhC,GACbkB,MAIA,WAATnB,GACC,mCAgBE,cAAC,IAAD,aACEoC,OAAQ,CAENC,KAAM,SAACC,GAAD,mBAAC,eAAmBA,GAApB,IAA8BC,OAAQ,SAE9CtC,YAAaA,EACbuC,aAAczB,EACd0B,QAASlC,EACTD,MAAOA,EAAQC,EAAamC,MAAK,SAACC,GAAD,OAAOA,EAAElB,KAAOnB,KAAS,GAC1DoB,SAAUjB,EACVmC,eAAgB,SAACC,GAAD,OAAYA,EAAO9C,MACnC+C,eAAgB,SAACD,GAAD,OAAYA,EAAOpB,IACnCsB,MAAO,SAACA,GACN,OAAO,2BACFA,GADL,IAEEC,aAAc,UACdC,YAAa,EACbC,OAAO,2BACFH,EAAMG,QADL,IAEJC,UAAW,uBACXC,UAAW,uBACXC,QAAS,gBAIXlC,MAIA,aAATnB,GACC,sBAAKuB,MAAO,CAAE+B,SAAU,YAAxB,UACE,qBACEC,IAAKlC,EAAemC,EAAcC,EAClClC,MAAO,CAAE+B,SAAU,WAAYI,MAAO,GAAIC,IAAK,IAC/CC,QAAS,kBAAMtC,GAAiBD,MAElC,cAACG,EAAA,EAAD,aACExB,KAAMqB,EAAe,OAAS,WAC9BtB,KAAMA,EACN0B,GAAI1B,EACJE,YAAaA,EACbyB,SAAUjB,EACVH,MAAOA,EACPU,SAAUA,EACVO,MAAO,CAAEsC,aAAc,KACnB1C,W,yCC9ID,MAA0B,wCCA1B,MAA0B,iCCsLnC2C,EAAqB,CACzBC,MAAO,SAACC,EAASC,GAAV,OAAsBC,YAAUF,EAASC,KAGnCE,sBAAWC,aATF,SAACC,GAAD,MAAY,CAClCC,WAAYD,EAAME,KAAKD,WACvBE,KAAMH,EAAME,QAOqCT,EAAzBM,EA7JZ,SAACjD,GAAW,IAAD,EACGC,oBAAS,GADZ,mBAChBqD,EADgB,KACTC,EADS,OAEKtD,mBAAS,CACnCuD,SAAU,GACVC,SAAU,KAJW,mBAEhBC,EAFgB,KAERC,EAFQ,KAMfH,EAAuBE,EAAvBF,SAAUC,EAAaC,EAAbD,SAEZG,EAAYC,iBAAO,IAanBC,EAAgB,SAACtC,GACH,KAAdA,EAAEuC,UACoB,KAApBL,EAAOF,SAAiBI,EAAUI,QAAV,SAA8BC,QAC7B,KAApBP,EAAOD,SAAiBG,EAAUI,QAAV,SAA8BC,QAClC,KAApBP,EAAOF,UAAuC,KAApBE,EAAOD,UAY9C,SAAkBjC,GAChBA,EAAE0C,iBACFX,GAAS,GACTvD,EAAM4C,MAAM,CAAEa,WAAUD,aAfqCW,CAAS3C,KAIxE,SAASjB,EAASiB,GAAI,IAAD,EACKA,EAAE4C,OAAlBxF,EADW,EACXA,KAAMO,EADK,EACLA,MACdwE,GAAU,SAACD,GAAD,mBAAC,eACNA,GADK,kBAEP9E,EAA6BO,OAclC,OAJAkF,qBAAU,WACgCd,EAAvB,KAAbC,GAAgC,KAAbC,KAEtB,CAACC,IAEF,eAAC,IAAMY,SAAP,WACE,cAAC,IAAD,UACE,6DAEF,qBAAKxE,UAAU,6BAAf,SACE,cAAC,IAAD,CAAMyE,GAAG,IAAIzE,UAAU,YAAvB,SACE,mBAAGA,UAAU,uBAGjB,qBAAKA,UAAU,6BAAf,SACE,cAAC0E,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAK3E,UAAU,yBAAf,SACE,eAAC4E,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,UACE,eAACC,EAAA,EAAD,CAAMhF,UAAU,kBAAhB,UACE,qBAAKA,UAAU,qBAAf,SACE,eAAC2E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKK,GAAI,EAAT,SACE,sBAAKjF,UAAU,mBAAf,UACE,oBAAIA,UAAU,eAAd,qCAGA,6DAGJ,cAAC4E,EAAA,EAAD,CAAK5E,UAAU,uBAAf,SACE,qBAAKsC,IAAK4C,EAASC,IAAI,GAAGnF,UAAU,qBAI1C,eAACoF,EAAA,EAAD,CAAUpF,UAAU,OAApB,UACE,8BACE,cAAC,IAAD,CAAMyE,GAAG,IAAIzE,UAAU,kBAAvB,SACE,qBAAKA,UAAU,kCAAf,SACE,sBAAMA,UAAU,uCAAhB,SACE,qBACEsC,IAAK+C,EACLF,IAAI,GACJnF,UAAU,iBACVsF,OAAO,eAMjB,qBAAKtF,UAAU,MAAf,SACE,eAACuF,EAAA,EAAD,CAAMvF,UAAU,kBAAhB,UACE,qBAAKA,UAAU,OAAf,SACE,cAACO,EAAA,EAAD,CACEiF,UAAQ,EACRzG,KAAK,OACLD,KAAK,WACLO,MAAOqE,EACPjD,SAAUA,EACVgF,WAAW,EACXC,QAAS1B,EACT2B,SAAU,SAACC,GAAD,OACP9B,EAAUI,QAAV,SAAgC0B,OAKvC,qBAAK5F,UAAU,OAAf,SACE,cAAC,EAAD,CACElB,KAAK,WACLC,KAAK,WACLM,MAAOsE,EACPnE,aAAciB,EACdiF,QAAS1B,EACT2B,SAAU,SAACC,GAAD,OACP9B,EAAUI,QAAV,SAAgC0B,OAKvC,qBAAK5F,UAAU,cAAf,SACE,wBACE2C,QAjHE,SAACkD,EAAOC,GAChCD,EAAMzB,iBACN2B,QAAQC,IAAIF,GACZ,IAAMG,EAAU,CACdtC,WACAD,YAEFxD,EAAM4C,MAAMmD,EAAS/F,EAAM8C,UA2GLjD,UAAWyD,EACXxD,UAAU,qDACVjB,KAAK,SAJP,gCAYV,qBAAKiB,UAAU,mBAAf,SACE,uCACK,IAAIkG,MAAOC,cADhB,2BACuD,IACrD,mBAAGnG,UAAU,8BAFf","file":"static/js/4.c929aa1a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport './index.scss';\nimport noimage from '@app-assets/images/png/no-image.png';\nimport videodownloadbutton from '@app-assets/images/png/video-download-button.png';\n\nfunction Text({\n  subtitle,\n  type = 'text',\n  text,\n  url,\n  classText,\n  handleClick,\n  CustomComponent,\n  labelColor = '#3B3E66',\n}) {\n  const [clicked, setClicked] = useState(false);\n  const onClick = (e, url = null) => {\n    if (url != null) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n    if (clicked === true) {\n      return;\n    }\n    setClicked(true);\n    if (type === 'img' && url != null) {\n      window.open(url, '_blank');\n    } else if (type === 'download') {\n      handleClick(e);\n    }\n  };\n  return (\n    <>\n      <p\n        className=\"subtitle\"\n        style={{\n          fontSize: '14px',\n          fontWeight: 'normal',\n          fontFamily: 'Heebo',\n          color: labelColor,\n        }}>\n        {subtitle}\n      </p>\n      {type === 'text' && (\n        <p\n          className={clsx('text', classText)}\n          style={{\n            fontSize: '16px',\n            fontWeight: 'bold',\n            fontFamily: 'Heebo',\n            color: '#3B3E66',\n          }}>\n          {text ? text : '-'}\n        </p>\n      )}\n      {type === 'img' && (\n        <a target=\"_blank\" title=\"Klik untuk download\" href={url}>\n          <img\n            className=\"image\"\n            src={url ? url : { noimage }}\n            alt=\"foto ktp\"\n            onClick={onClick(url)}\n          />\n        </a>\n      )}\n      {type === 'download' && (\n        <a target=\"_blank\" title=\"Klik untuk download\" onClick={onClick}>\n          <img\n            src={videodownloadbutton}\n            className=\"image\"\n            alt=\"Klik untuk download\"\n          />\n        </a>\n      )}\n      {type === 'custom' && <CustomComponent />}\n    </>\n  );\n}\n\nexport default Text;\n","export default __webpack_public_path__ + \"static/media/eye-open.ef7aac34.svg\";","export default __webpack_public_path__ + \"static/media/eye-close.c43d16df.svg\";","import React, { useEfect, useState } from 'react';\nimport moment from 'moment';\nimport { Input, InputGroup } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport Select from 'react-select';\nimport iconEyeOpen from '@app-assets/images/svg/eye-open.svg';\nimport iconEyeClose from '@app-assets/images/svg/eye-close.svg';\n\nfunction TextInput({\n  name,\n  type = 'text',\n  placeholder,\n  label,\n  labelClassName = 'font-weight-bold pb-2 text-primary d-block',\n  labelStyle = { color: '#F83245' },\n  value,\n  emptyValue,\n  selectOption,\n  handleChange,\n  handleDateChange,\n  handleDateTimeChange,\n  startDate,\n  endDate,\n  minDate,\n  search,\n  className,\n  disabled,\n  isRequired,\n  ...props\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n  return (\n    <>\n      {label && (\n        <small className={labelClassName}>\n          {label} {isRequired && <span style={labelStyle}> *</span>}\n        </small>\n      )}\n      {type === 'text' && (\n        <Input\n          type={type}\n          name={name}\n          id={name}\n          placeholder={placeholder}\n          onChange={handleChange}\n          value={value}\n          disabled={disabled}\n          {...props}\n        />\n      )}\n      {type === 'date' && (\n        <InputGroup>\n          <DatePicker\n            className=\"form-control\"\n            onChange={(date) => handleDateChange(date)}\n            dateFormat=\"yyyy-MM-dd\"\n            selected={value ? moment(value).toDate() : null}\n            placeholderText={placeholder}\n            popperPlacement=\"top-end\"\n            startDate={startDate}\n            endDate={endDate}\n            minDate={minDate ? startDate : null}\n            {...props}\n          />\n        </InputGroup>\n      )}\n      {type === 'datetime' && (\n        <InputGroup>\n          <DatePicker\n            className=\"form-control\"\n            onChange={(date) => handleDateTimeChange(date)}\n            dateFormat=\"yyyy-MM-dd hh:mm\"\n            selected={value ? moment(value).toDate() : null}\n            showTimeSelect\n            popperPlacement=\"top-end\"\n            placeholderText={placeholder}\n            {...props}\n          />\n        </InputGroup>\n      )}\n      {type === 'select' && (\n        <>\n          {/* <Input\n            type=\"select\"\n            name={name}\n            id={name}\n            value={value}\n            onChange={handleChange}>\n            <option value={emptyValue}>{placeholder}</option>\n            {selectOption.map(({ name, id }) => {\n              return (\n                <option value={id} key={id}>\n                  {name}\n                </option>\n              );\n            })}\n          </Input> */}\n          <Select\n            styles={{\n              // Fixes the overlapping problem of the component\n              menu: (provided) => ({ ...provided, zIndex: 9999 }),\n            }}\n            placeholder={placeholder}\n            isSearchable={search}\n            options={selectOption}\n            value={value ? selectOption.find((e) => e.id === value) : ''}\n            onChange={handleChange}\n            getOptionLabel={(option) => option.name}\n            getOptionValue={(option) => option.id}\n            theme={(theme) => {\n              return {\n                ...theme,\n                borderRadius: '0.29rem',\n                borderWidth: 1,\n                colors: {\n                  ...theme.colors,\n                  primary25: 'rgba(60,68,177,0.15)',\n                  primary50: 'rgba(60,68,177,0.15)',\n                  primary: '#3c44b1',\n                },\n              };\n            }}\n            {...props}\n          />\n        </>\n      )}\n      {type === 'password' && (\n        <div style={{ position: 'relative' }}>\n          <img\n            src={showPassword ? iconEyeOpen : iconEyeClose}\n            style={{ position: 'absolute', right: 15, top: 15 }}\n            onClick={() => setShowPassword(!showPassword)}\n          />\n          <Input\n            type={showPassword ? 'text' : 'password'}\n            name={name}\n            id={name}\n            placeholder={placeholder}\n            onChange={handleChange}\n            value={value}\n            disabled={disabled}\n            style={{ paddingRight: 35 }}\n            {...props}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default TextInput;\n","export default __webpack_public_path__ + \"static/media/profile-img.43b59e59.png\";","export default __webpack_public_path__ + \"static/media/logo.a0143fa8.svg\";","import PropTypes from 'prop-types';\nimport MetaTags from 'react-meta-tags';\nimport React, { useEffect, useState, useRef } from 'react';\n\nimport {\n  Row,\n  Col,\n  CardBody,\n  Card,\n  Alert,\n  Container,\n  Input,\n  Button,\n  Form,\n  FormGroup,\n} from 'reactstrap';\nimport { TextInput } from '@app-components/Text';\n// Redux\nimport { connect, useSelector } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\n// availity-reactstrap-validation\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\n\n// actions\nimport { loginUser } from '../actions';\n// import images\nimport profile from '@app-assets/images/profile-img.png';\nimport logo from '@app-assets/images/logo.svg';\n\nconst Login = (props) => {\n  const [valid, setValid] = useState(false);\n  const [inputs, setInputs] = useState({\n    username: '',\n    password: '',\n  });\n  const { username, password } = inputs;\n\n  const inputRefs = useRef({});\n\n  // handleValidSubmit\n  const handleValidSubmit = (event, values) => {\n    event.preventDefault();\n    console.log(values);\n    const request = {\n      password,\n      username,\n    };\n    props.Login(request, props.history);\n  };\n\n  const handleOnEnter = (e) => {\n    if (e.keyCode === 13) {\n      if (inputs.username === '') inputRefs.current['username'].focus();\n      else if (inputs.password === '') inputRefs.current['password'].focus();\n      else if (inputs.username !== '' && inputs.password !== '') onSubmit(e);\n    }\n  };\n\n  function onChange(e) {\n    const { name, value } = e.target;\n    setInputs((inputs) => ({\n      ...inputs,\n      [name]: name === 'username' ? value : value,\n    }));\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    setValid(false);\n    props.Login({ password, username });\n  }\n\n  useEffect(() => {\n    if (username !== '' && password !== '') setValid(true);\n    else setValid(false);\n  }, [inputs]);\n  return (\n    <React.Fragment>\n      <MetaTags>\n        <title>Login | Whatsapp Blast</title>\n      </MetaTags>\n      <div className=\"home-btn d-none d-sm-block\">\n        <Link to=\"/\" className=\"text-dark\">\n          <i className=\"fas fa-home h2\" />\n        </Link>\n      </div>\n      <div className=\"account-pages my-5 pt-sm-5\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md={8} lg={6} xl={5}>\n              <Card className=\"overflow-hidden\">\n                <div className=\"bg-primary bg-soft\">\n                  <Row>\n                    <Col xs={7}>\n                      <div className=\"text-primary p-4\">\n                        <h5 className=\"text-primary\">\n                          Selamat datang kembali!\n                        </h5>\n                        <p>Masuk untuk melanjutkan</p>\n                      </div>\n                    </Col>\n                    <Col className=\"col-5 align-self-end\">\n                      <img src={profile} alt=\"\" className=\"img-fluid\" />\n                    </Col>\n                  </Row>\n                </div>\n                <CardBody className=\"pt-0\">\n                  <div>\n                    <Link to=\"/\" className=\"auth-logo-light\">\n                      <div className=\"avatar-md profile-user-wid mb-4\">\n                        <span className=\"avatar-title rounded-circle bg-light\">\n                          <img\n                            src={logo}\n                            alt=\"\"\n                            className=\"rounded-circle\"\n                            height=\"34\"\n                          />\n                        </span>\n                      </div>\n                    </Link>\n                  </div>\n                  <div className=\"p-2\">\n                    <Form className=\"form-horizontal\">\n                      <div className=\"mb-3\">\n                        <Input\n                          required\n                          type=\"text\"\n                          name=\"username\"\n                          value={username}\n                          onChange={onChange}\n                          autoFocus={true}\n                          onKeyUp={handleOnEnter}\n                          innerRef={(el) =>\n                            (inputRefs.current['username'] = el)\n                          }\n                        />\n                      </div>\n\n                      <div className=\"mb-3\">\n                        <TextInput\n                          name=\"password\"\n                          type=\"password\"\n                          value={password}\n                          handleChange={onChange}\n                          onKeyUp={handleOnEnter}\n                          innerRef={(el) =>\n                            (inputRefs.current['password'] = el)\n                          }\n                        />\n                      </div>\n\n                      <div className=\"mt-3 d-grid\">\n                        <button\n                          onClick={handleValidSubmit}\n                          disabled={!valid}\n                          className=\"btn btn-primary btn-block waves-effect waves-light\"\n                          type=\"submit\">\n                          Masuk\n                        </button>\n                      </div>\n                    </Form>\n                  </div>\n                </CardBody>\n              </Card>\n              <div className=\"mt-5 text-center\">\n                <p>\n                  © {new Date().getFullYear()} Dashboard Bintang Motor{' '}\n                  <i className=\"mdi mdi-heart text-danger\" /> by IT Bintang\n                </p>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isLoggedIn: state.auth.isLoggedIn,\n  Auth: state.auth,\n});\n\nconst mapDispatchToProps = {\n  Login: (payload, history) => loginUser(payload, history),\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\n\nLogin.propTypes = {\n  error: PropTypes.any,\n  history: PropTypes.object,\n  loginUser: PropTypes.func,\n  socialLogin: PropTypes.func,\n};\n"],"sourceRoot":""}